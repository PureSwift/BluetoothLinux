{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"acceptConnection"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BluetoothAddress","preciseIdentifier":"s:9Bluetooth0A7AddressV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"role"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HCIAcceptConnectionRequest","preciseIdentifier":"s:12BluetoothHCI26HCIAcceptConnectionRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Role","preciseIdentifier":"s:12BluetoothHCI26HCIAcceptConnectionRequestV4RoleO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HCICommandTimeout","preciseIdentifier":"s:12BluetoothHCI17HCICommandTimeoutV"},{"kind":"text","text":" = .default) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Accept_Connection_Request command is used to accept a new incoming connection request. The Accept_Connection_Request command shall only be issued after a Connection Request event has occurred. The Connection Request event will return the BD_ADDR of the device which is requesting the connection. This command will cause the Link Manager to create a connection to the BR\/EDR Controller, with the BD_ADDR specified by the command parameters. The Link Manager will determine how the new connection will be established. This will be determined by the current state of the device, its piconet, and the state of the device to be connected. The Role command parameter allows the Host to specify if the Link Manager shall request a role switch and become the Master for this connection. This is a preference and not a requirement. If the Role Switch fails then the connection will still be accepted, and the Role Discovery Command will reflect the current role."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bluetoothlinux\/hostcontroller\/acceptconnection(address:role:timeout:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux\/HostController\/acceptConnection(address:role:timeout:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Accept Connection Command"}],"kind":"symbol","metadata":{"role":"symbol","title":"acceptConnection(address:role:timeout:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"acceptConnection"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BluetoothAddress","preciseIdentifier":"s:9Bluetooth0A7AddressV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"role"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HCIAcceptConnectionRequest","preciseIdentifier":"s:12BluetoothHCI26HCIAcceptConnectionRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Role","preciseIdentifier":"s:12BluetoothHCI26HCIAcceptConnectionRequestV4RoleO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HCICommandTimeout","preciseIdentifier":"s:12BluetoothHCI17HCICommandTimeoutV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:12BluetoothHCI0A23HostControllerInterfacePAAE16acceptConnection7address4role7timeouty0A00A7AddressV_AA09HCIAcceptG7RequestV4RoleOAA17HCICommandTimeoutVtYaKF::SYNTHESIZED::s:14BluetoothLinux14HostControllerC","extendedModule":"BluetoothHCI","modules":[{"name":"BluetoothLinux"}]},"hierarchy":{"paths":[["doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux","doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux\/HostController","doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux\/HostController\/BluetoothHostControllerInterface-Implementations"]]},"references":{"doc://BluetoothLinux/documentation/BluetoothLinux/HostController/acceptConnection(address:role:timeout:)":{"role":"symbol","title":"acceptConnection(address:role:timeout:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"acceptConnection"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BluetoothAddress","preciseIdentifier":"s:9Bluetooth0A7AddressV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"role"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HCIAcceptConnectionRequest","preciseIdentifier":"s:12BluetoothHCI26HCIAcceptConnectionRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Role","preciseIdentifier":"s:12BluetoothHCI26HCIAcceptConnectionRequestV4RoleO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HCICommandTimeout","preciseIdentifier":"s:12BluetoothHCI17HCICommandTimeoutV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Accept Connection Command"}],"identifier":"doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux\/HostController\/acceptConnection(address:role:timeout:)","kind":"symbol","type":"topic","url":"\/documentation\/bluetoothlinux\/hostcontroller\/acceptconnection(address:role:timeout:)"},"doc://BluetoothLinux/documentation/BluetoothLinux/HostController":{"role":"symbol","title":"HostController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HostController"}],"abstract":[{"type":"text","text":"Manages connection \/ communication to the underlying Bluetooth hardware."}],"identifier":"doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux\/HostController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HostController"}],"url":"\/documentation\/bluetoothlinux\/hostcontroller"},"doc://BluetoothLinux/documentation/BluetoothLinux":{"role":"collection","title":"BluetoothLinux","abstract":[{"type":"text","text":"Pure Swift Bluetooth Stack for Linux."}],"identifier":"doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux","kind":"symbol","type":"topic","url":"\/documentation\/bluetoothlinux"},"doc://BluetoothLinux/documentation/BluetoothLinux/HostController/BluetoothHostControllerInterface-Implementations":{"role":"collectionGroup","title":"BluetoothHostControllerInterface Implementations","abstract":[],"identifier":"doc:\/\/BluetoothLinux\/documentation\/BluetoothLinux\/HostController\/BluetoothHostControllerInterface-Implementations","kind":"article","type":"topic","url":"\/documentation\/bluetoothlinux\/hostcontroller\/bluetoothhostcontrollerinterface-implementations"}}}